services:
  db:
    container_name: postgres_container
    image: postgres:14.18
    ports:
      - "5000:5432"
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: db_user
      POSTGRES_PASSWORD: db_password
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./postgres/airflow_init.sql:/docker-entrypoint-initdb.d/airflow_init.sql
    group_add:
      - 1004
    networks:
      - my-network
  af:
    container_name: airflow_container
    image: apache/airflow:3.0.0
    ports:
      - 8080:8080
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@db:5432/airflow_db
      AIRFLOW_PROJ_DIR: /opt/airflow
      PYTHONPATH: /opt/airflow
      AIRFLOW_DBT_PROJECT_HOST_PATH: ${AIRFLOW_DBT_PROJECT_HOST_PATH:-${PWD}/dbt/my_project}
      AIRFLOW_DBT_PROFILES_DIR_HOST_PATH: ${AIRFLOW_DBT_PROFILES_DIR_HOST_PATH:-${PWD}/airflow/.dbt}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/api:/opt/airflow/api
      - /var/run/docker.sock:/var/run/docker.sock
    group_add:
      - 1004
    depends_on:
      - db
    networks:
      - my-network
    command: >
      bash -c "airflow db migrate && airflow standalone"

  dbt:
    container_name: dbt_container
    image: ghcr.io/dbt-labs/dbt-postgres:1.9.latest
    volumes:
      - ./dbt/my_project:/usr/app
    working_dir: /usr/app
    environment:
      DBT_PROFILES_DIR: "/root/.dbt"
    depends_on:
      - db
    networks:
      - my-network
    entrypoint: ["/bin/sh"]
    command: ["-c", "mkdir -p /root/.dbt && printf '%s\n' 'my_project:' '  target: dev' '  outputs:' '    dev:' '      type: postgres' '      host: db' '      user: db_user' '      password: db_password' '      port: 5432' '      dbname: db' '      schema: dev' '      threads: 4' > /root/.dbt/profiles.yml && dbt run"]


networks:
  my-network:
    driver: bridge
